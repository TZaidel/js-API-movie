{"mappings":"YACA,IAKIA,EALEC,EAAOC,SAASC,cAAc,SAGhCC,GAFiBF,SAASC,cAAc,kBAC5BD,SAASC,cAAc,iBAC5B,GAGLE,EAAW,+BAEXC,EAAU,mCAyBhB,SAASC,IACL,IAAMC,EAAS,IAAIC,gBAAgB,CACnCC,QAASJ,EACTK,KAAMP,IAEN,OAAOQ,MAAM,GAAcC,OAAXR,GAAuBQ,OA/B1B,uBA+BuB,KAAUA,OAAPL,IAClCM,MAAK,SAAAC,GACF,IAAKA,EAAOC,GACZ,MAAM,IAAIC,MAAMF,EAAOG,YAEvB,OAAOH,EAAOI,M,IAc1B,SAASC,EAAaC,GAClB,OAAOA,EAAIC,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAYH,EAAZG,aAAcC,EAAWJ,EAAXI,Y,MACvC,WAC2Cd,OADhCW,EAAG,sEAERX,OADqCc,EAAY,oBAErCd,OADZY,EAAM,mCAC8BZ,OAAxBa,EAAaE,QAAQ,GAAG,8E,IAElCC,KAAK,G,CAGrB,SAASC,IACW5B,SAAS6B,iBAAiB,aAClCC,SAAQ,SAACC,GACbA,EAAOC,iBAAiB,QAASC,E,IAIzC,SAASA,EAAgBC,GACrB,IA5BoBC,EA4BdC,EAAgBF,EAAMG,OAAOC,QAAQ,UA5BvBH,GA6BJC,EAAcd,GA5BvBZ,MAAM,GAAqBC,OAAlBR,EAAS,WAA4BQ,OAAnBwB,EAAQ,aAAmBxB,OAARP,IAChDQ,MAAK,SAAAC,GACF,IAAKA,EAAOC,GACZ,MAAM,IAAIC,MAAMF,EAAOG,YAEvB,OAAOH,EAAOI,M,KAwBjBL,MAAK,SAAA2B,GACFC,QAAQC,IAAIF,IACZzC,EAAW4C,cAAcC,OAAO,qFAEtBhC,OADqC4B,EAAId,YAAY,4BAEtDd,OADC4B,EAAIhB,MAAM,8BACEZ,OAAb4B,EAAIK,SAAS,kCAEbC,M,IAEZC,OAAM,SAAAC,GACHP,QAAQC,IAAI,gBAAiBM,E,IAMzCC,OAAOhB,iBAAiB,WAExB,SAAuBE,GACA,WAAfA,EAAMe,MAAoBnD,GAC1BA,EAASoD,O;;;;GAwDjB,IAAMC,EAAQnD,SAASC,cAAc,UAO/BmD,EAAW,IAAIC,sBAErB,SAA0BC,EAASC,GAC/Bf,QAAQC,IAAIa,GACZA,EAAQxB,SAAQ,SAAA0B,GACRA,EAAMC,iBACNvD,GAAQ,EACRG,IAAiBO,MAAK,SAAA8C,GAClBlB,QAAQC,IAAIiB,GACZ3D,EAAK4D,mBAAmB,YAAazC,EAAawC,EAAKE,UACvDhC,IACI8B,EAAKjD,MAAQiD,EAAKG,aAClBN,EAASO,UAAUN,EAAMnB,O,UAlB7B,CACZ0B,KAAM,KACNC,WAAY,QACZC,UAAW,IAsBf5D,EAAWH,EAAK,GACXU,MAAK,SAAA8C,GACFlB,QAAQC,IAAIiB,GACZ3D,EAAK4D,mBAAmB,YAAazC,EAAawC,EAAKE,UACvDhC,IAEI8B,EAAKjD,KAAO,GACZ2C,EAASc,QAAQf,E,IAIxBL,OAAM,SAAAC,G,OAAQP,QAAQC,IAAI,wBAAyBM,E","sources":["src/movie/movie.js"],"sourcesContent":["import axios from \"axios\";\nconst list = document.querySelector('.list')\nconst btnContainer = document.querySelector('.btn-container')\nconst btnLoad = document.querySelector('.js-load-more')\nlet page = 1\nlet totalPages=2\nlet instance\nconst BASE_URL = \"https://api.themoviedb.org/3\"\nconst ENDPOINT = \"/trending/movie/week\"\nconst API_KEY = \"d23ee7111563012a1c81428dff1d7a5f\"\n\n// btnLoad.addEventListener('click', onLoadMoreClick)\n\n// fetchMovie(page=1)\n//     .then(data => {\n//         console.log(data)\n//         list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results))\n//         addEventListener()\n//     })\n//     .catch(error=> console.log('error in fetchMovie()', error))\n    \n// function onLoadMoreClick(event) {\n//     page +=1\n//     fetchMovie(page)\n//         .then(data => {\n//             console.log(data)\n//             list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results))\n//             if (data.page >= data.total_pages) {\n//                 btnLoad.style.display= \"none\"\n//             }\n//         })\n\n// }\n\nfunction fetchMovie() {\n    const params = new URLSearchParams({\n    api_key: API_KEY,\n    page: page\n})\n    return fetch(`${BASE_URL}${ENDPOINT}?${params}`)\n        .then(result => {\n            if (!result.ok) {\n            throw new Error(result.statusText)\n            }\n            return result.json()\n    })\n}\n\nfunction fetchMovieInfo(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n        .then(result => {\n            if (!result.ok) {\n            throw new Error(result.statusText)\n            }\n            return result.json()\n        })\n}\n\nfunction createMarkup(arr) {\n    return arr.map(({ id, title, vote_average, poster_path }) =>\n        `<li id=\"${id}\" class=\"item\">\n        <img src=\"https://image.tmdb.org/t/p/w200${poster_path}\">\n        <h2>${title}</h2>\n        <p class=\"vote\">${vote_average.toFixed(1)}</p>\n        <button class=\"more-btn\">Read more...</button>\n        </li>`).join('')\n}\n\nfunction addEventListener() {\n    const moreBtn = document.querySelectorAll('.more-btn')\n    moreBtn.forEach((button) => {\n        button.addEventListener('click', onReadMoreClick)\n    })\n}\n\nfunction onReadMoreClick(event) {\n    const selectedMovie = event.target.closest('.item')\n    fetchMovieInfo(+selectedMovie.id)\n        .then(res =>  {\n            console.log(res)\n            instance = basicLightbox.create(`<div class=\"modal-box\">\n                <img src=\"https://image.tmdb.org/t/p/w200${res.poster_path}\">\n                <h2>${res.title}</h2>\n                <p>${res.overview}</p></div>\n                `)\n            instance.show()  \n        })\n        .catch(error => {\n            console.log('error onClick', error)\n        })\n}\n\n\n\nwindow.addEventListener('keydown', onEscapePress)\n\nfunction onEscapePress(event) {\n    if (event.code === \"Escape\"&& instance)\n        instance.close()\n}\n\n\n\n\n\n//!axios\n// function serviceMovie(page = 1) {\n//         const BASE_URL = \"https://api.themoviedb.org/3\"\n//     const ENDPOINT = \"/trending/movie/week\"\n//     const API_KEY = \"d23ee7111563012a1c81428dff1d7a5f\"\n\n//     const params = new URLSearchParams({\n//         api_key: API_KEY,\n//         page: page\n//     })\n\n//     return axios.get(`${BASE_URL}${ENDPOINT}?${params}`)\n//         .then(resp =>{\n//             console.log(resp)\n//             return resp.data\n//         })\n//         .catch(err => {\n//         throw new Error(err)\n//     })\n// }\n//!--------async-await\n// async function render() {\n//     try {\n//         const data = await fetchMovie()\n//         list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results))\n\n//     } catch(error) {\n//         console.log('new Error')\n//     }\n// }\n\n// async function fetchMovie() {\n//         const params = new URLSearchParams({\n//     api_key: API_KEY,\n//     page: page\n//         })\n//     try {\n//         const res = await axios(`${BASE_URL}${ENDPOINT}?${params}`)\n//         console.log(res)\n//     return await res.data\n//     } catch (error) {\n//         throw new Error(error)\n//     }\n// }\n// render()\n\n\n//!---------infinity scroll\n\nconst guard = document.querySelector('.guard')\nconst options = {\n    root: null,\n    rootMargin: '200px',\n    threshold: 0\n}\n\nconst observer = new IntersectionObserver(handlePagination, options)\n\nfunction handlePagination(entries, observer) {\n    console.log(entries)\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            page += 1\n            fetchMovie(page).then(data => {\n                console.log(data)\n                list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n                addEventListener()\n                if (data.page >= data.total_pages) {\n                    observer.unobserve(entry.target)\n                }\n            })\n        }\n})\n}\n\nfetchMovie(page=1)\n    .then(data => {\n        console.log(data)\n        list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results))\n        addEventListener()\n\n        if (data.page < 3) {\n            observer.observe(guard)\n        }\n\n    })\n    .catch(error=> console.log('error in fetchMovie()', error))\n    \n\n\n\n\n\n\n\n"],"names":["$d8b8aad2d7644a5b$var$instance","$d8b8aad2d7644a5b$var$list","document","querySelector","$d8b8aad2d7644a5b$var$page","$d8b8aad2d7644a5b$var$BASE_URL","$d8b8aad2d7644a5b$var$API_KEY","$d8b8aad2d7644a5b$var$fetchMovie","params","URLSearchParams","api_key","page","fetch","concat","then","result","ok","Error","statusText","json","$d8b8aad2d7644a5b$var$createMarkup","arr","map","param","id","title","vote_average","poster_path","toFixed","join","$d8b8aad2d7644a5b$var$addEventListener","querySelectorAll","forEach","button","addEventListener","$d8b8aad2d7644a5b$var$onReadMoreClick","event","movieId","selectedMovie","target","closest","res","console","log","basicLightbox","create","overview","show","catch","error","window","code","close","$d8b8aad2d7644a5b$var$guard","$d8b8aad2d7644a5b$var$observer","IntersectionObserver","entries","observer1","entry","isIntersecting","data","insertAdjacentHTML","results","total_pages","unobserve","root","rootMargin","threshold","observe"],"version":3,"file":"movie.d849e6a3.js.map"}